:root {
    --primary-color: #fb645f;
    --white-color: white;
    --black-color: #000;
    --text-color: #333;
    --border-color: #dbdbdb;
    --navbar-height: 34px;
    --header-with-search-height: calc(var(--header-height) - var(--navbar-height));
}

* {
    box-sizing: inherit;
}

html {
    font-size: 62.5%;
    line-height: 1.6rem;
    /* font-family: 'Roboto', sans-serif; */
    box-sizing: border-box;
}

body {
    background-image: linear-gradient(0, #e4dac6, #cdcdb3);
    font-family: 'Galada', cursive;
    background-repeat: no-repeat;
    font-size: 20px;
}


/* 
Cách chia Responsive:
.grid{
    .row{
        .col-1{

        }
        .col-2{

        }
        ...
    }
}
chia lm 12 cột là 100%
*/

.grid {
    width: 1200px;
    max-width: 100%;
    margin: 0 auto;
}

.grid__row {
    display: flex;
    flex-wrap: wrap;
    margin-left: -12px;
    margin-right: -12px;
}

.grid__column-2 {
    padding-left: 12px;
    padding-right: 12px;
    width: 16.6667%;
}

.grid__column-3 {
    padding-left: 12px;
    padding-right: 12px;
    width: 23.0001%
}

.grid__column-10 {
    padding-left: 12px;
    padding-right: 12px;
    width: 83.3334%;
}

.grid__full-width {
    width: 100%;
}


/* Animations */

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes growth {
    from {
        transform: scale(--growth-from);
    }
    to {
        transform: scale(--growth-to);
    }
}

@keyframes headerNotifyGrowth {
    from {
        opacity: 0;
        transform: scale(0);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes animatetop {
    from {
        top: -300px;
        opacity: 0
    }
    to {
        top: 0;
        opacity: 1
    }
}

@keyframes zoomIn {
    from {
        opacity: 0;
        -webkit-transform: scale3d(.3, .3, .3);
        transform: scale3d(.3, .3, .3);
    }
    50% {
        opacity: 1;
    }
}

@keyframes remodal-opening-keyframes {
    from {
        transform: scale(1.05);
        opacity: 0;
    }
    to {
        transform: none;
        opacity: 1;
    }
}

@keyframes remodal-closing-keyframes {
    from {
        transform: scale(1);
        opacity: 1;
    }
    to {
        transform: scale(0.95);
        opacity: 0;
    }
}

@keyframes remodal-overlay-opening-keyframes {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes remodal-overlay-closing-keyframes {
    from {
        opacity: 1;
    }
    to {
        opacity: 0;
    }
}

@keyframes tada {
    from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }
    10%,
    20% {
        -webkit-transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
        transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);
    }
    30%,
    50%,
    70%,
    90% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);
    }
    40%,
    60%,
    80% {
        -webkit-transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
        transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);
    }
    to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }
}

@keyframes pulse {
    from {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }
    50% {
        -webkit-transform: scale3d(1.05, 1.05, 1.05);
        transform: scale3d(1.05, 1.05, 1.05);
    }
    to {
        -webkit-transform: scale3d(1, 1, 1);
        transform: scale3d(1, 1, 1);
    }
}


/* Modal */

.modal {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    animation: fadeIn linear 0.1s;
    display: none;
}

.modal__overlay {
    /* position: absolute; */
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
}

.modal__body {
    --growth-from: 0.7;
    --growth-to: 1;
    /* position: relative; */
    z-index: 1;
    /* margin: 100px 500px; */
    animation: growth linear 0.1s;
    display: flex;
    justify-content: center;
    padding-top: 150px;
}


/* Button style */

.btn {
    min-width: 142px;
    height: 34px;
    border: none;
    border-radius: 3px;
    text-decoration: none;
    font-size: 1.5rem;
    padding: 0 12px;
    outline: none;
    cursor: pointer;
    color: var(--text-color);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    line-height: 1.4rem;
}

.btn.btn--normal:hover {
    /* .btn.btn--normal đc hiểu là tk nào có class btn--normal mới hover vào */
    background-color: rgba(0, 0, 0, 0.1);
}

.btn.btn--size-s {
    padding: 8px;
    height: 32px;
    font-size: 12px;
}

.btn.btn--primary {
    /* Selection tới 1 thẻ mà thẻ đó có cả 2 class nếu thiếu 1 in 2 class thì ko chọn đc nữa  */
    background-color: var(--primary-color);
    color: var(--white-color);
}

.btn.btn--disabled {
    color: #949494;
    cursor: default;
    background-color: #c3c3c3;
}


/* Selection */

.select--input {
    height: 34px;
    padding: 0 12px;
    min-width: 200px;
    border-radius: 2px;
    display: flex;
    position: relative;
    background-color: var(--white-color);
    justify-content: space-between;
    align-items: center;
}

.select--input::after {
    content: "";
    position: absolute;
    display: block;
    top: 32px;
    right: 0.5px;
    width: 99%;
    height: 8px;
}

.select--input:hover .select--input__list {
    display: block;
}

.select--input__label {
    font-size: 1.4rem;
}

.select--input__icon {
    font-size: 1.4rem;
    position: relative;
    top: 1px;
}

.select--input__list {
    position: absolute;
    left: 0;
    right: 0;
    top: calc(100% - 8px);
    border-radius: 2px;
    background-color: var(--white-color);
    padding: 8px 16px;
    display: none;
    z-index: 1;
    list-style: none;
}

.select--input__list:hover {
    display: block;
}

.select--input__link {
    text-decoration: none;
    font-size: 1.4rem;
    color: var(--text-color);
    display: block;
    padding: 4px 0;
}

.select--input__link:hover {
    color: var(--primary-color);
}